{"ast":null,"code":"import _toConsumableArray from \"C:/Users/\\u05D0\\u05D1\\u05D9\\u05D1/Documents/\\u05DC\\u05D9\\u05DE\\u05D5\\u05D3\\u05D9\\u05DD/\\u05D4\\u05D2\\u05E9\\u05D4 \\u05EA\\u05DB\\u05E0\\u05D5\\u05EA/Client22/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _classCallCheck from \"C:/Users/\\u05D0\\u05D1\\u05D9\\u05D1/Documents/\\u05DC\\u05D9\\u05DE\\u05D5\\u05D3\\u05D9\\u05DD/\\u05D4\\u05D2\\u05E9\\u05D4 \\u05EA\\u05DB\\u05E0\\u05D5\\u05EA/Client22/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/\\u05D0\\u05D1\\u05D9\\u05D1/Documents/\\u05DC\\u05D9\\u05DE\\u05D5\\u05D3\\u05D9\\u05DD/\\u05D4\\u05D2\\u05E9\\u05D4 \\u05EA\\u05DB\\u05E0\\u05D5\\u05EA/Client22/node_modules/@babel/runtime/helpers/esm/createClass.js\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\n\nvar _a;\n\nimport { Component, Inject } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { of, forkJoin } from 'rxjs';\nimport { tap, startWith, switchMap, debounceTime, distinctUntilChanged, finalize } from 'rxjs/operators';\nimport { SmartFlightsFilterService } from '../Utils/smartFlightsFilter.service';\nimport { ParamTypes } from '../interfaces/QualityParam';\nimport { searchState } from '../enums/searchState';\nimport { DataDisplayService } from '../Utils/dataDisplay.service';\nimport { MatDialog } from '@angular/material';\nimport { DaysOffDialogComponent } from '../daysOffDialog/daysOffDialog.component';\nimport { FilterTripsService } from '../Utils/filterTrips.Service';\nimport { DaysOffUtilsService, weekDay } from '../Utils/daysOffUtils.service';\n\nvar SearchFlightsComponent = /*#__PURE__*/function () {\n  function SearchFlightsComponent(http, baseUrl, smartFlightsFilterService, dataDisplayService, dialog, filterTripsService, daysOffUtilsService) {\n    _classCallCheck(this, SearchFlightsComponent);\n\n    this.http = http;\n    this.baseUrl = baseUrl;\n    this.smartFlightsFilterService = smartFlightsFilterService;\n    this.dataDisplayService = dataDisplayService;\n    this.dialog = dialog;\n    this.filterTripsService = filterTripsService;\n    this.daysOffUtilsService = daysOffUtilsService;\n    this.loadingProgress = 0;\n    this.loadingMessage = 'Searching for flights...';\n    this.searchStatesEnum = searchState;\n    this.currentSearchState = searchState.empty;\n    this.minAutocompliteLength = 2;\n    this.whereTo = new FormControl();\n    this.tripType = 'roundTrip';\n    this.whereFrom = new FormControl();\n    this.searchByDates = 'Dates';\n    this.searchByDaysOff = 'DaysOff';\n    this.datesToggleValue = this.searchByDates;\n    this.isLoadingFromOptions = false;\n    this.isLoadingToOptions = false;\n    this.serverResult = [];\n    this.qualityParams = [{\n      paramType: ParamTypes.price,\n      paramImportancePrecent: 40\n    }, {\n      paramType: ParamTypes.totalTripLength,\n      paramImportancePrecent: 40\n    }, {\n      paramType: ParamTypes.numberOfStops,\n      paramImportancePrecent: 20\n    }];\n    this.minSliderValue = 10;\n    this.maxSliderValue = 70;\n    this.sliderValue = (this.maxSliderValue + this.minSliderValue) / 2;\n    this.numberOfPassengersOptions = [1, 2, 3, 4, 5, 6, 7, 8];\n    this.numberOfPassengers = 2;\n    this.numberOfDaysOffOptions = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14];\n    this.numberOfDaysOff = 4;\n    this.daysOff = [{\n      name: weekDay.sunday,\n      isFreeDay: false\n    }, {\n      name: weekDay.monday,\n      isFreeDay: false\n    }, {\n      name: weekDay.tuesday,\n      isFreeDay: false\n    }, {\n      name: weekDay.wednesday,\n      isFreeDay: false\n    }, {\n      name: weekDay.thursday,\n      isFreeDay: false\n    }, {\n      name: weekDay.friday,\n      isFreeDay: true\n    }, {\n      name: weekDay.saturday,\n      isFreeDay: true\n    }];\n    this.filterParams = {\n      maxPrice: undefined,\n      flightTime: {\n        inbound: {\n          morning: true,\n          afternoon: true,\n          evening: true,\n          night: true\n        },\n        outbound: {\n          morning: true,\n          afternoon: true,\n          evening: true,\n          night: true\n        }\n      },\n      numOfStops: {\n        zero: true,\n        one: true,\n        two: false,\n        threeAndMore: false\n      }\n    };\n    this.minPriceSliderValue = 0;\n    this.maxPriceSliderValue = 3000;\n    this.initializeDates();\n    this.subscribeToWhereFromField();\n    this.subscribeToWhereToField();\n  }\n\n  _createClass(SearchFlightsComponent, [{\n    key: \"initializeDates\",\n    value: function initializeDates() {\n      this.minDate = new Date();\n      this.maxDate = new Date(this.minDate.getFullYear() + 1, this.minDate.getMonth(), this.minDate.getDate());\n      this.defultDepartureDate = new Date();\n      this.defultDepartureDate.setHours(0, 0, 0, 0);\n      this.departureDate = new FormControl(this.defultDepartureDate);\n      var returnDate = new Date();\n      returnDate.setDate(returnDate.getDate() + 1);\n      this.returnDate = new FormControl(returnDate);\n      var returnDateForRange = new Date();\n      returnDateForRange.setDate(returnDate.getDate() + 7);\n      this.daysOffDateRange = new FormControl({\n        begin: new Date(),\n        end: returnDateForRange\n      });\n    }\n  }, {\n    key: \"subscribeToWhereFromField\",\n    value: function subscribeToWhereFromField() {\n      var _this = this;\n\n      var fromLoadingRequestNumber = 0;\n      var fromFinishedRequestNumber = 0;\n      this.whereFrom.valueChanges.pipe(startWith(null), debounceTime(500), tap(function () {\n        fromLoadingRequestNumber++;\n        _this.isLoadingFromOptions = true;\n      }), distinctUntilChanged(), switchMap(function (val) {\n        return _this.getFlightPlacesFromServer(val || '').pipe(finalize(function () {\n          fromFinishedRequestNumber++;\n\n          if (fromFinishedRequestNumber === fromFinishedRequestNumber) {\n            _this.isLoadingFromOptions = false;\n          }\n        }));\n      })).subscribe(function (result) {\n        return _this.fromOptions = result;\n      });\n    }\n  }, {\n    key: \"subscribeToWhereToField\",\n    value: function subscribeToWhereToField() {\n      var _this2 = this;\n\n      var toLoadingRequestNumber = 0;\n      var toFinishedRequestNumber = 0;\n      this.whereTo.valueChanges.pipe(startWith(null), debounceTime(500), tap(function () {\n        toLoadingRequestNumber++;\n        _this2.isLoadingToOptions = true;\n      }), distinctUntilChanged(), switchMap(function (val) {\n        return _this2.getFlightPlacesFromServer(val || '').pipe(finalize(function () {\n          toFinishedRequestNumber++;\n\n          if (toFinishedRequestNumber === toLoadingRequestNumber) {\n            _this2.isLoadingToOptions = false;\n          }\n        }));\n      })).subscribe(function (re) {\n        _this2.toOptions = re;\n      });\n    }\n  }, {\n    key: \"getFlightPlacesFromServer\",\n    value: function getFlightPlacesFromServer(val) {\n      if (val && val.length >= this.minAutocompliteLength) {\n        var params = new HttpParams().set('query', val); // return this.http.get<any[]>(this.baseUrl + 'api/SkyScanner/GetPlaces', { params: params });\n\n        return this.http.get('http://localhost:8000/' + 'api/AmadeusController/GetPlaces', {\n          params: params\n        });\n      }\n\n      return of([]);\n    }\n  }, {\n    key: \"onSearch\",\n    value: function onSearch() {\n      var _this3 = this;\n\n      this.resetResults();\n      this.setCurrentState(searchState.loading);\n      this.manageLoadingValue();\n\n      if (this.datesToggleValue === this.searchByDaysOff) {\n        var searchDates = this.daysOffUtilsService.getDatesToSerach(this.daysOffDateRange.value, this.numberOfDaysOff, this.daysOff);\n        var observables = [];\n        searchDates.forEach(function (dateRange) {\n          observables.push(_this3.requestFromServer(dateRange.begin, dateRange.end));\n        });\n        forkJoin(observables).subscribe(function (results) {\n          results.forEach(function (tripOptions) {\n            var _this3$serverResult;\n\n            (_this3$serverResult = _this3.serverResult).push.apply(_this3$serverResult, _toConsumableArray(tripOptions));\n          });\n          _this3.allTripOptions = _this3.smartFlightsFilterService.getBestTripsResults(_this3.serverResult, _this3.qualityParams);\n\n          if (_this3.allTripOptions.length === 0) {\n            _this3.setCurrentState(searchState.noResults);\n\n            return;\n          }\n\n          _this3.filteredTripOptions = _this3.filterTripsService.getFilteredTrips(_this3.allTripOptions, _this3.filterParams);\n\n          _this3.setCurrentState(searchState.succsses);\n        }, function (error) {\n          return _this3.onError(error);\n        });\n      } else {\n        this.requestFromServer(this.departureDate.value, this.returnDate.value).subscribe(function (tripOptions) {\n          _this3.serverResult = tripOptions;\n          _this3.allTripOptions = _this3.smartFlightsFilterService.getBestTripsResults(_this3.serverResult, _this3.qualityParams);\n\n          if (_this3.allTripOptions.length === 0) {\n            _this3.setCurrentState(searchState.noResults);\n\n            return;\n          }\n\n          _this3.filteredTripOptions = _this3.filterTripsService.getFilteredTrips(_this3.allTripOptions, _this3.filterParams);\n\n          _this3.setCurrentState(searchState.succsses);\n        }, function (error) {\n          return _this3.onError(error);\n        });\n      }\n    }\n  }, {\n    key: \"requestFromServer\",\n    value: function requestFromServer(departureDate, returnDate) {\n      if (departureDate === this.addHoursToDate(this.defultDepartureDate, 3)) {\n        departureDate = new Date();\n      }\n\n      departureDate = this.addHoursToDate(departureDate, 3);\n      returnDate = this.addHoursToDate(returnDate, 3);\n      var body = new HttpParams().append('outboundDate', departureDate ? departureDate.toISOString() : null).append('inboundDate', returnDate ? returnDate.toISOString() : null).append('originPlace', JSON.stringify(this.whereFrom.value)).append('destinationPlace', JSON.stringify(this.whereTo.value)).append('people', this.numberOfPassengers.toString()).append('oneWay', this.isOneWay().toString()); //return this.http.post<any[]>(this.baseUrl + 'api/SkyScanner/flights', param);\n\n      return this.http.post('http://localhost:8000/' + 'api/AmadeusController/GetFlights', body);\n    }\n  }, {\n    key: \"onError\",\n    value: function onError(error) {\n      this.setCurrentState(searchState.error);\n      this.resetResults();\n      console.error(error);\n    }\n  }, {\n    key: \"resetResults\",\n    value: function resetResults() {\n      this.serverResult = [];\n      this.allTripOptions = [];\n      this.filteredTripOptions = [];\n    }\n  }, {\n    key: \"onSliderInputChange\",\n    value: function onSliderInputChange(value) {\n      this.qualityParams.find(function (param) {\n        return param.paramType === ParamTypes.price;\n      }).paramImportancePrecent = value;\n      this.qualityParams.find(function (param) {\n        return param.paramType === ParamTypes.totalTripLength;\n      }).paramImportancePrecent = this.maxSliderValue + this.minSliderValue - value;\n      this.allTripOptions = this.smartFlightsFilterService.getBestTripsResults(this.serverResult, this.qualityParams);\n      this.filteredTripOptions = this.filterTripsService.getFilteredTrips(this.allTripOptions, this.filterParams);\n    }\n  }, {\n    key: \"isOneWay\",\n    value: function isOneWay() {\n      return this.tripType === 'oneWay';\n    }\n  }, {\n    key: \"swapDestinations\",\n    value: function swapDestinations() {\n      var dest = this.whereFrom.value;\n      this.whereFrom.setValue(this.whereTo.value);\n      this.whereTo.setValue(dest);\n    }\n  }, {\n    key: \"onDatesToggleValueChange\",\n    value: function onDatesToggleValueChange(val) {\n      this.datesToggleValue = val;\n    }\n  }, {\n    key: \"manageLoadingValue\",\n    value: function manageLoadingValue() {\n      var _this4 = this;\n\n      this.loadingProgress = 2;\n      var tid = setInterval(function () {\n        if (_this4.currentSearchState === searchState.loading && _this4.loadingProgress < 90) {\n          _this4.loadingProgress += 2;\n        } else {\n          clearInterval(tid);\n        }\n      }, 500);\n    }\n  }, {\n    key: \"setCurrentState\",\n    value: function setCurrentState(state) {\n      var _this5 = this;\n\n      if (this.currentSearchState === searchState.loading) {\n        this.loadingProgress = 100;\n        setTimeout(function () {\n          _this5.currentSearchState = state;\n          _this5.loadingProgress = 0;\n        }, 500);\n      } else {\n        this.currentSearchState = state;\n      }\n    }\n  }, {\n    key: \"openDaysOffDialog\",\n    value: function openDaysOffDialog() {\n      var _this6 = this;\n\n      var dialogRef = this.dialog.open(DaysOffDialogComponent, {\n        width: '350px',\n        data: this.daysOff\n      });\n      dialogRef.afterClosed().subscribe(function (result) {\n        if (result) {\n          _this6.daysOff = result;\n        }\n      });\n    }\n  }, {\n    key: \"onPriceSliderInputChange\",\n    value: function onPriceSliderInputChange(value) {\n      this.priceSliderValue = value;\n      this.filterParams.maxPrice = this.priceSliderValue;\n      this.filteredTripOptions = this.filterTripsService.getFilteredTrips(this.allTripOptions, this.filterParams);\n    }\n  }, {\n    key: \"onPriceInputLiveChange\",\n    value: function onPriceInputLiveChange(event) {\n      this.priceSliderValue = event.value;\n    }\n  }, {\n    key: \"resetPriceSlider\",\n    value: function resetPriceSlider() {\n      this.priceSliderValue = undefined;\n      this.filterParams.maxPrice = this.priceSliderValue;\n      this.filteredTripOptions = this.filterTripsService.getFilteredTrips(this.allTripOptions, this.filterParams);\n    }\n  }, {\n    key: \"onCheckboxChanged\",\n    value: function onCheckboxChanged() {\n      this.filteredTripOptions = this.filterTripsService.getFilteredTrips(this.allTripOptions, this.filterParams);\n    }\n  }, {\n    key: \"resetStopsCheckboxs\",\n    value: function resetStopsCheckboxs() {\n      this.filterParams.numOfStops = {\n        zero: true,\n        one: true,\n        two: false,\n        threeAndMore: false\n      };\n      this.onCheckboxChanged();\n    }\n  }, {\n    key: \"resetOutboundTimesCheckboxs\",\n    value: function resetOutboundTimesCheckboxs() {\n      this.filterParams.flightTime.outbound = {\n        morning: true,\n        afternoon: true,\n        evening: true,\n        night: true\n      };\n      this.onCheckboxChanged();\n    }\n  }, {\n    key: \"resetInboundTimesCheckboxs\",\n    value: function resetInboundTimesCheckboxs() {\n      this.filterParams.flightTime.inbound = {\n        morning: true,\n        afternoon: true,\n        evening: true,\n        night: true\n      };\n      this.onCheckboxChanged();\n    }\n  }, {\n    key: \"addHoursToDate\",\n    value: function addHoursToDate(date, hours) {\n      date.setTime(date.getTime() + hours * 60 * 60 * 1000);\n      return date;\n    }\n  }, {\n    key: \"disableSearch\",\n    value: function disableSearch() {\n      return this.currentSearchState === searchState.loading || !this.isWhereFromValid() || !this.isWhereToValid() || !this.isDatesValid() || !this.isPlacesValid();\n    }\n  }, {\n    key: \"showErrorTooltip\",\n    value: function showErrorTooltip() {\n      return this.isWhereFromValid() && this.isWhereToValid() && this.isDatesValid() && this.isPlacesValid();\n    }\n  }, {\n    key: \"isWhereFromValid\",\n    value: function isWhereFromValid() {\n      return !this.whereFrom.value || this.whereFrom.value && this.whereFrom.value.placeId;\n    }\n  }, {\n    key: \"isWhereToValid\",\n    value: function isWhereToValid() {\n      return !this.whereTo.value || this.whereTo.value && this.whereTo.value.placeId;\n    }\n  }, {\n    key: \"isDatesValid\",\n    value: function isDatesValid() {\n      if (this.datesToggleValue === this.searchByDates && this.departureDate.value && this.returnDate.value) {\n        return this.departureDate.value <= this.returnDate.value;\n      } else {\n        return true;\n      }\n    }\n  }, {\n    key: \"isPlacesValid\",\n    value: function isPlacesValid() {\n      return !(this.whereFrom.value && this.whereTo.value && this.whereFrom.value.placeId === this.whereTo.value.placeId);\n    }\n  }, {\n    key: \"getTooltipMessage\",\n    value: function getTooltipMessage() {\n      if (!this.isWhereFromValid() || !this.isWhereToValid()) {\n        return 'Please choose existing locations';\n      }\n\n      if (!this.isPlacesValid()) {\n        return 'The departure and arrivle locations must be different';\n      }\n\n      if (!this.isDatesValid()) {\n        return 'Return date must be after departure date';\n      }\n\n      return 'form not valid';\n    }\n  }]);\n\n  return SearchFlightsComponent;\n}();\n\nSearchFlightsComponent = __decorate([Component({\n  selector: 'app-search-flights',\n  templateUrl: './searchFlights.component.html',\n  styleUrls: ['./searchFlights.component.scss']\n}), __param(1, Inject('BASE_URL')), __metadata(\"design:paramtypes\", [HttpClient, String, SmartFlightsFilterService, DataDisplayService, typeof (_a = typeof MatDialog !== \"undefined\" && MatDialog) === \"function\" ? _a : Object, FilterTripsService, DaysOffUtilsService])], SearchFlightsComponent);\nexport { SearchFlightsComponent };","map":null,"metadata":{},"sourceType":"module"}