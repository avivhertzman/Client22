{"ast":null,"code":"import _classCallCheck from \"C:/Users/\\u05D0\\u05D1\\u05D9\\u05D1/Documents/\\u05DC\\u05D9\\u05DE\\u05D5\\u05D3\\u05D9\\u05DD/\\u05D4\\u05D2\\u05E9\\u05D4 \\u05EA\\u05DB\\u05E0\\u05D5\\u05EA/Client22/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/\\u05D0\\u05D1\\u05D9\\u05D1/Documents/\\u05DC\\u05D9\\u05DE\\u05D5\\u05D3\\u05D9\\u05DD/\\u05D4\\u05D2\\u05E9\\u05D4 \\u05EA\\u05DB\\u05E0\\u05D5\\u05EA/Client22/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport * as i0 from \"@angular/core\";\nexport var DaysOffUtilsService = /*#__PURE__*/(function () {\n  var DaysOffUtilsService = /*#__PURE__*/function () {\n    function DaysOffUtilsService() {\n      _classCallCheck(this, DaysOffUtilsService);\n    }\n\n    _createClass(DaysOffUtilsService, [{\n      key: \"getDatesToSerach\",\n      value: function getDatesToSerach(dateRange, wantedDaysOff, uncountedDays) {\n        var dateRanges = [];\n        var currentRange = {\n          begin: dateRange.begin,\n          end: dateRange.begin\n        };\n        var currentDate = dateRange.begin;\n\n        while (currentDate <= dateRange.end) {\n          var daysOffNum = 0;\n\n          if (this.isDayOff(currentDate, uncountedDays)) {\n            daysOffNum++;\n          }\n\n          currentRange.begin = currentDate;\n\n          while (daysOffNum <= wantedDaysOff && currentDate <= dateRange.end) {\n            var nextDay = this.addDays(currentDate, 1);\n\n            if (this.isDayOff(nextDay, uncountedDays)) {\n              if (daysOffNum < wantedDaysOff) {\n                currentDate = nextDay;\n              }\n\n              daysOffNum++;\n            } else {\n              currentDate = nextDay;\n            }\n          }\n\n          currentRange.end = currentDate;\n          dateRanges.push({\n            begin: currentRange.begin,\n            end: currentRange.end\n          });\n        }\n\n        return dateRanges;\n      }\n    }, {\n      key: \"isDayOff\",\n      value: function isDayOff(day, uncounedDates) {\n        var weekDayName = this.getDayName(day);\n        var dayInUncounedDates = uncounedDates.find(function (d) {\n          return d.name === weekDayName;\n        });\n        return !dayInUncounedDates.isFreeDay;\n      }\n    }, {\n      key: \"getDayName\",\n      value: function getDayName(date) {\n        var weekDays = [weekDay.sunday, weekDay.monday, weekDay.tuesday, weekDay.wednesday, weekDay.thursday, weekDay.friday, weekDay.saturday];\n        return weekDays[date.getDay()];\n      }\n    }, {\n      key: \"addDays\",\n      value: function addDays(date, days) {\n        var result = new Date(date);\n        result.setDate(result.getDate() + days);\n        return result;\n      }\n    }]);\n\n    return DaysOffUtilsService;\n  }();\n\n  DaysOffUtilsService.ɵfac = function DaysOffUtilsService_Factory(t) {\n    return new (t || DaysOffUtilsService)();\n  };\n\n  DaysOffUtilsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: DaysOffUtilsService,\n    factory: DaysOffUtilsService.ɵfac,\n    providedIn: 'root'\n  });\n  return DaysOffUtilsService;\n})();\nexport var weekDay = /*#__PURE__*/(function () {\n  (function (weekDay) {\n    weekDay[\"sunday\"] = \"sunday\";\n    weekDay[\"monday\"] = \"monday\";\n    weekDay[\"tuesday\"] = \"tuesday\";\n    weekDay[\"wednesday\"] = \"wednesday\";\n    weekDay[\"thursday\"] = \"thursday\";\n    weekDay[\"friday\"] = \"friday\";\n    weekDay[\"saturday\"] = \"saturday\";\n  })(weekDay || (weekDay = {}));\n\n  return weekDay;\n})();","map":null,"metadata":{},"sourceType":"module"}